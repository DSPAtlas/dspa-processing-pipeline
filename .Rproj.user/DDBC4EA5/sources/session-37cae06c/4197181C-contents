---
title: "compare_assign_missigness"
output: html_document
date: "2024-09-17"
---

# Compare asssign missigness functions

## Loading packages 

```{r loading_packages, message=FALSE, warning=FALSE}
if (!requireNamespace("dendextend", quietly = TRUE)) install.packages("dendextend")
if (!requireNamespace("pheatmap", quietly = TRUE)) install.packages("pheatmap")
if (!requireNamespace("seriation", quietly = TRUE)) install.packages("seriation")

library(dendextend)
library(pheatmap)
library(seriation)
library(protti)
library(tidyverse)
library(data.table)
library(dplyr)
library(magrittr)
library(stringr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(magrittr)

source("../src/calculate_peptide_abundance.R")
source("../src/assign_missigness.R")
source("../src/impute_without_comparison.R")
```

## Loading data

```{r loading_data, message=FALSE, warning=FALSE}
DIA_raw <- read_protti("../data/mduennebacke_Report_MD.tsv")
condition_table <- read.delim("../data/mduennebacke_ConditionSetup.tsv")

DIA_raw %<>%
  left_join(condition_table, by = c("r_file_name" = "File.Name"))

```

## filter data

```{r cleaning_data, message = FALSE, warning = FALSE}
DIA_raw$intensity_log2 <- log2(DIA_raw$fg_ms2raw_quantity)

DIA_raw_norm <- protti::normalise(DIA_raw,
  sample = r_file_name,
  intensity_log2 = intensity_log2,
  method = "median"
)

protti::qc_median_intensities(
  DIA_raw_norm,
  r_file_name,
  pep_grouping_key,
  normalised_intensity_log2,
  plot = TRUE,
  interactive = FALSE
)

DIA_clean <- DIA_raw_norm %>%
  dplyr::filter(fg_quantity > 1000) %>%
  dplyr::filter(pep_is_proteotypic == T)

protti::qc_median_intensities(
  DIA_clean,
  r_file_name,
  pep_grouping_key,
  normalised_intensity_log2,
  plot = TRUE,
  interactive = FALSE
)


DIA_clean$fg_id <- paste0(DIA_clean$fg_labeled_sequence, DIA_clean$fg_charge)

unis <- unique(DIA_clean$pg_protein_accessions) # make vector for fetch_uniprot
```



## Impute Data with different functions

```{r,  message=FALSE, warning=FALSE}
#  `assign_missingness`
result_protti_assign_missingness <- protti::assign_missingness(
  data = DIA_clean,
  sample = r_file_name,
  condition = Condition,
  grouping = fg_id, 
  intensity = intensity_log2
)

result_ludovic_assign_missingness <- ludovic_assign_missingness(
  data = DIA_clean,
  file_name = r_file_name,
  r_condition = Condition,
  r_condrep = Replicate,
  precursor = fg_id, 
  intensity = intensity_log2
)


data_protti_imputed <- protti::impute(
   result_protti_assign_missingness ,
   sample = r_file_name,
   grouping = fg_id,
   intensity_log2 = intensity_log2,
   condition = Condition,
   comparison = comparison,
   missingness = missingness,
   method = "ludovic",
 )

data_ludo_imputed <- impute_without_comparison(
   result_ludovic_assign_missingness ,
   sample = r_file_name,
   grouping = fg_id,
   intensity_log2 = intensity_log2,
   condition = Condition,
   missingness = missingness,
   method = "ludovic",
 )
```

## Compare the Assigned Missingness Types

```{r comparison,  message=FALSE, warning=FALSE}
# Compare the results side-by-side
comparison <- data.frame(
  grouping = result_protti_assign_missingness$fg_id,  
  protti_missingness_type = result_protti_assign_missingness$missingness,
  ludovic_missingness_type = result_ludovic_assign_missingness$missingness
)

# Create a summary of how the missingness types compare
summary_comparison <- comparison %>%
  group_by(protti_missingness_type, ludovic_missingness_type) %>%
  summarise(count = n())

# View the comparison summary
print(summary_comparison)
```


## Visualize the Results
```{r imputation_prepare, message=FALSE, warning=FALSE}
library(ggplot2)

# Imputation summary visualization
imputation_summary <- comparison %>%
  group_by(protti_missingness_type, ludovic_missingness_type) %>%
  summarise(mean_imputed_value = mean(count))

# Merge missingness information from both methods with the imputed data
imputed_data_combined <- data_protti_imputed %>%
  select(fg_id, r_file_name, Condition, protti_intensity_log2 = imputed_intensity) %>%
  left_join(result_protti_assign_missingness %>%
              select(fg_id, r_file_name, Condition, missingness), 
            by = c("fg_id", "r_file_name", "Condition")) %>%
  rename(protti_missingness_type = missingness) %>%
  left_join(data_ludo_imputed %>%
              select(fg_id, r_file_name, Condition, ludovic_intensity_log2 = imputed_intensity), 
            by = c("fg_id", "r_file_name", "Condition")) %>%
  left_join(result_ludovic_assign_missingness %>%
              select(fg_id, r_file_name, Condition, missingness), 
            by = c("fg_id", "r_file_name", "Condition")) %>%
  rename(ludovic_missingness_type = missingness)

imputation_summary <- imputed_data_combined %>%
  filter(!is.na(protti_intensity_log2) & !is.na(ludovic_intensity_log2)) %>%  # Ensure no NA values
  group_by(protti_missingness_type, ludovic_missingness_type) %>%
  summarise(mean_protti_imputed_value = mean(protti_intensity_log2, na.rm = TRUE),
            mean_ludovic_imputed_value = mean(ludovic_intensity_log2, na.rm = TRUE),
            count = n(),
            .groups = 'drop')

# Print imputation summary for inspection
print(imputation_summary)

```


## Statistical Comparison
```{r statistic,  message=FALSE, warning=FALSE}
# Conduct a statistical test to compare the imputed values between methods
t_test_results <- t.test(data_protti_imputed$intensity_log2, data_ludo_imputed$intensity_log2)

# Output test results
print(t_test_results)
```

```{r plot1,  message=FALSE, warning=FALSE}
# Combine Protti and Ludovic imputed data into one dataframe for plotting
density_data <- imputed_data_combined %>%
  pivot_longer(cols = c(protti_intensity_log2, ludovic_intensity_log2), 
               names_to = "method", values_to = "intensity_log2") %>%
  mutate(missingness_type = if_else(method == "protti_intensity_log2", protti_missingness_type, ludovic_missingness_type))

# Combined density plot with missingness type color coding
ggplot(density_data %>% drop_na(), aes(x = intensity_log2, fill = interaction(method, missingness_type))) +
  geom_density(alpha = 0.5) +
  labs(title = "Density Plot of Imputed Values (Protti vs Ludovic)", 
       x = "Log2 Intensity", y = "Density") +
  scale_fill_manual(values = c("protti_intensity_log2.MAR" = "blue", "protti_intensity_log2.MNAR" = "darkblue", "protti_intensity_log2.complete" = "lightblue",
                               "ludovic_intensity_log2.MAR" = "red", "ludovic_intensity_log2.MNAR" = "darkred", "ludovic_intensity_log2.complete" = "pink")) +
  theme_minimal() +
  theme(text = element_text(size = 14))
```

 
```{r plot2,  message=FALSE, warning=FALSE}
ggplot(imputed_data_combined %>% drop_na(), aes(x = protti_intensity_log2, fill = protti_missingness_type)) +
  geom_density(alpha = 0.5) +
  labs(title = "Density Plot of Imputed Values - Protti", 
       x = "Log2 Intensity", y = "Density") +
  scale_fill_manual(values = c("MAR" = "blue", "MNAR" = "darkblue", "complete" = "lightblue")) +
  theme_minimal() +
  theme(text = element_text(size = 14))

# Density plot for Ludovic imputed values by missingness type
ggplot(imputed_data_combined, aes(x = ludovic_intensity_log2, fill = ludovic_missingness_type)) +
  geom_density(alpha = 0.5) +
  labs(title = "Density Plot of Imputed Values - Ludovic", 
       x = "Log2 Intensity", y = "Density") +
  scale_fill_manual(values = c("MAR" = "red", "MNAR" = "darkred", "complete" = "pink")) +
  theme_minimal() +
  theme(text = element_text(size = 14))
```
